pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'balagouninaveen/nodejs-docker-app'  // Replace with your Docker Hub username and image name
        IMAGE_TAG = "${latest}"            // Use Jenkins build ID as the image tag
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', url: 'https://github.com/BalagouniNaveen/sample-proj.git'  // Replace with your GitHub repo URL
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image from the Dockerfile in the repository
                    sh 'docker buildx build -t $DOCKER_IMAGE:$IMAGE_TAG .'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run basic tests inside the Docker container (adjust the command for your app)
                    // Example: If it's a Node.js app, run `npm test` inside the Docker container
                    sh 'docker run --rm $DOCKER_IMAGE:$IMAGE_TAG npm test'  // Modify this based on your app's test command
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    // Docker login to Docker Hub
                    withCredentials([usernamePassword(credentialsId: 'dockerhub_credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        // Log into Docker Hub using credentials
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    }

                    // Tag and push the image to Docker Hub
                    sh 'docker tag $DOCKER_IMAGE:$IMAGE_TAG $DOCKER_USERNAME/$DOCKER_IMAGE:$IMAGE_TAG'
                    sh 'docker push $DOCKER_USERNAME/$DOCKER_IMAGE:$IMAGE_TAG'
                }
            }
        }

        stage('Deploy Locally') {
            steps {
                script {
                    // Deploy the Docker image locally (running the container on your laptop/Windows machine)
                    // Replace with any necessary deployment steps depending on your app (e.g., starting a web server, etc.)
                    sh 'docker run -d -p 80:80 $DOCKER_USERNAME/$DOCKER_IMAGE:$IMAGE_TAG'  // Example: Expose the app on port 80
                }
            }
        }
    }
    post {
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Pipeline failed!"
        }
    }
}
